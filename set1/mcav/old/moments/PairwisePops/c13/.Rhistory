sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
setwd("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/mcav/moments/PairwisePops/c24/")
weight.cutoff=1e-2 # lowest Akaike weight to report a model
npl=read.table("likes")
names(npl)=c("model","id","npara","ll")
#npl$model=as.factor(npl$model)
# finding minimum likelihood for each model
maxlike=c()
for (m in unique(npl$model)) {
sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
setwd("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/mcav/moments/PairwisePops/c23/")
weight.cutoff=1e-2 # lowest Akaike weight to report a model
npl=read.table("likes")
names(npl)=c("model","id","npara","ll")
#npl$model=as.factor(npl$model)
# finding minimum likelihood for each model
maxlike=c()
for (m in unique(npl$model)) {
sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
setwd("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/mcav/moments/PairwisePops/c24/")
weight.cutoff=1e-2 # lowest Akaike weight to report a model
npl=read.table("likes")
names(npl)=c("model","id","npara","ll")
#npl$model=as.factor(npl$model)
# finding minimum likelihood for each model
maxlike=c()
for (m in unique(npl$model)) {
sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
mod.results <- read.table('mmods.res', sep = " ")
mod.results <- read.table('mmods.res')
mod.results <- read.file('mmods.res')
mod.results <- read.table('mmods.res', sep = ": ")
mod.results <- read.table('mmods.res', sep = ":")
View(mod.results)
mod.results <- read.table('mmods.res', sep = ":", row.names = T)
mod.results <- read.table('mmods.res', sep = ":", row.names = F)
mod.results <- read.table('mmods.res', sep = ":")
View(mod.results)
mod.results <- read.table('mmods.res', fill = T)
View(mod.results)
mod.results <- read.table('mmods.res', sep = ":")
strsplit(mod.results[1,1], " ")
strsplit(mod.results[1,1], "\s")
strsplit(mod.results[1,1], "\\s")
mod.results[1,1]
mod.results <- read.table('mmods.res', sep = ":", as.is = T)
str(mod.results)
mod.results[1,1]
test <- gsub("[", "", mod.results)
test <- gsub("[", "", mod.results[1,1])
test <- gsub("\[", "", mod.results)
test <- gsub("\\[", "", mod.results)
test[1,1]
test <- gsub("\\[", "", mod.results[1,1])
test
test <- gsub("\\[|\\]|\\[ | \\]", "", mod.results[1,1])
test
test <- apply(mod.results, 1, function(x) gsub("\\[|\\]|\\[ | \\]", "", x))
test[1]
test[2]
mod.results <- apply(read.table('mmods.res', sep = ":", as.is = T), 1, function(x) gsub("\\[|\\]|\\[ | \\]", "", x))
setwd("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/mcav/moments/PairwisePops/c24/")
weight.cutoff=1e-2 # lowest Akaike weight to report a model
npl=read.table("likes")
names(npl)=c("model","id","npara","ll")
#npl$model=as.factor(npl$model)
# finding minimum likelihood for each model
maxlike=c()
for (m in unique(npl$model)) {
sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
grep("sc2i&663344", mod.results)
grep("sc2i"&663344, mod.results)
mod.params <- apply(mod.results, 1, function(x) x[1:2])
mod.params <- apply(mod.results, 1, function(x) x[1])
mod.results
mod.params <- apply(maxlike, 1, function(x) x[1:2])
mod.params
maxlike[,1:2]
apply(maxlike, 1, function(x) as.character(c(x[1], x[2])))
apply(maxlike, 1, function(x) as.character(paste0(x[1], x[2])))
apply(maxlike, 1, function(x) as.character(paste(x[1], x[2], sep = " ")))
grep(apply(maxlike, 1, function(x) as.character(paste(x[1], x[2], sep = " "))), mod.results)
maxlike[,2]
grep(paste(maxlike[,2], collapse = "|"), mod.results)
# report parameter estimates for top models
mod.results <- apply(read.table("mmods.res", sep = ":", as.is = T), 1, function(x) gsub("\\[|\\]|\\[ | \\]", "", x))
mod.params <- mod.results[grep(paste(maxlike[,2], collapse = "|"), mod.results)]
mod.params
grep(apply(maxlike, 1, function(x) as.character(paste(x[1], x[2], collapse = " "))), mod.results)
as.character(paste(maxlike[,1], maxlike[,2], collapse = " ")
)
paste(maxlike[,1], maxlike[,2], collapse = " ")
apply(maxlike, 1, function(x) paste(x[1], x[2], collapse = " "))
apply(maxlike, 1, function(x) paste(x[1], x[2], sep = " ", collapse = " "))
apply(maxlike, 1, function(x) paste(x[1], x[2], sep = " ", collapse = "|"))
apply(maxlike, 1, function(x) paste(x[1], x[2], collapse = "|"))
apply(maxlike, 1, function(x) paste0(x[1], x[2]))
str(maxlike)
maxlike[,2]
maxlike[2,2]
maxlike[1,2]
apply(maxlike, 1, function(x) paste(x[1], as.character(x[2]), sep = " "))
maxlike[,1]
maxlike$model <- as.character(maxlike$model)
maxlike[,1]
# finding minimum likelihood for each model
maxlike=c()
for (m in unique(npl$model)) {
sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
# report parameter estimates for top models
mod.results <- apply(read.table("mmods.res", sep = ":", as.is = T), 1, function(x) gsub("\\[|\\]|\\[ | \\]", "", x))
apply(maxlike, 1, function(x) paste(as.character(x[1]), x[2], sep = " "))
with(maxlike, paste(model, id, sep = " "))
mod.params <- mod.results[grep(paste(with(maxlike, paste(model, id, sep = " ")), collapse = "|"), mod.results)]
mod.params
param.ids <- read.table("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/moments_scripts/folded_params", sep = "\t")
View(param.ids)
param.ids <- read.table("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/moments_scripts/folded_params", sep = ":", as.is = T)
View(param.ids)
mod.params <- list(mod.results[grep(paste(with(maxlike, paste(model, id, sep = " ")), collapse = "|"), mod.results)])
mod.params.v <- mod.results[grep(paste(with(maxlike, paste(model, id, sep = " ")), collapse = "|"), mod.results)]
mod.params.l <- as.list(mod.params.v)
mod.params.l <- lapply(as.list(mod.params.v), function(x) strplit(x, sep = " ")
)
mod.params.l <- lapply(as.list(mod.params.v), function(x) strsplit(x, sep = " "))
mod.params.l <- lapply(as.list(mod.params.v), function(x) strsplit(x, split = " "))
mod.params.l <- sapply(as.list(mod.params.v), function(x) strsplit(x, split = " "))
mod.params.l[[1]][1]
mod.params.l[[1]][2]
toupper(substr(mod.params.l[[1]][2]),1,2)
toupper(substr(mod.params.l[[1]][2],1,2))
paste(toupper(substr(mod.params.l[[1]][2],1,2)), substring(mod.params.l[[1]][2], 2), sep="", collapse=" ")
paste(toupper(substr(mod.params.l[[1]][2],1,2)), substr(mod.params.l[[1]][2], 3), sep="", collapse=" ")
paste(toupper(substring(mod.params.l[[1]][2],1,2)), substring(mod.params.l[[1]][2], 3), sep="", collapse=" ")
paste(toupper(substring(mod.params.l[[1]][2],1,2)), substring(mod.params.l[[1]][2], 3), sep="")
length(mod.params.l)
View(param.ids)
mod.params.l[1]
mod.params.l[[1]]
param.ids <- read.table("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/moments_scripts/folded_params", sep = ":", as.is = T)
sapply(mod.params.l, function(x) grep(x[2], param.ids[,1], ignore.case = T))
mod.params.l[[4]]
sapply(mod.params.l, function(x) grep(paste0(x[2],".py"), param.ids[,1], ignore.case = T, ))
i=1
mod.index <- grep(paste0(mod.params.l[[1]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- strsplit(param.ids[mod.index,2], split = ",")
all.params <- as.character(strsplit(param.ids[mod.index,2], split = ","))
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
named.params <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(9+length(all.params))])
named.params <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))])
View(named.params)
mod.params.l[[i]]
mod.params.v
install.packages('stringr')
# report parameter estimates for top models
library(stringr)
mod.results <- apply(read.table("mmods.res", sep = ":", as.is = T), 1, function(x) gsub("\\[|\\]|\\[ | \\]", "", x))
mod.params.v <- mod.results[grep(paste(with(maxlike, paste(model, id, sep = " ")), collapse = "|"), mod.results)]
mod.params.v <- gsub("\\s+", " ", str_trim(mod.params.v))
mod.params.l <- sapply(as.list(mod.params.v), function(x) strsplit(x, split = " "))
param.ids <- read.table("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/moments_scripts/folded_params", sep = ":", as.is = T)
mod.index <- grep(paste0(mod.params.l[[1]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
named.params <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))])
named.params
setwd("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/mcav/moments/PairwisePops/c24/")
weight.cutoff=1e-2 # lowest Akaike weight to report a model
npl=read.table("likes")
names(npl)=c("model","id","npara","ll")
# finding minimum likelihood for each model
maxlike=c()
for (m in unique(npl$model)) {
sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
maxlike$model <- as.character(maxlike$model)
# report parameter estimates for top models
library(stringr)
mod.results <- apply(read.table("mmods.res", sep = ":", as.is = T), 1, function(x) gsub("\\[|\\]|\\[ | \\]", "", x))
mod.params.v <- mod.results[grep(paste(with(maxlike, paste(model, id, sep = " ")), collapse = "|"), mod.results)]
mod.params.v <- gsub("\\s+", " ", str_trim(mod.params.v))
mod.params.l <- sapply(as.list(mod.params.v), function(x) strsplit(x, split = " "))
param.ids <- read.table("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/moments_scripts/folded_params", sep = ":", as.is = T)
params.out <- list()
for(i in length(mod.params.l)){
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
params.out[[i]] <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))])
}
params.out[[1]]
params.out[[2]]
i
params.out <- list()
for(i in 1:length(mod.params.l)){
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
params.out[[i]] <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))])
}
params.out[[1]]
params.out[[2]]
params.out[[3]]
params.out[[4]]
model.id <- mod.params.l[[i]][2]
model.id
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
params.out[[model.id]] <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))])
}
params.out
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
params.out[[model.id]] <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))])
write.table(params.out, paste0(model.id, "_params.txt"), quote = F)
}
params.out
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
params.out[[model.id]] <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))])
write.table(params.out[[model.id]], paste0(model.id, "_params.txt"), quote = F)
}
i
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
out.df <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))])
out.df$Parameter
out.df$Parameter <- gsub(" ", "", as.character(out.df$Parameter))
out.df
out.df$Parameter
params.out <- list()
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
out.df <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][9:(8+length(all.params))], Error = mod.params.l[[i]][9:(8+length(all.params))])
out.df$Parameter <- gsub(" ", "", as.character(out.df$Parameter))
params.out[[model.id]] <- out.df
write.table(out.df, paste0(model.id, "_params.txt"), quote = F, sep = "\t", row.names = F)
}
View(param.ids)
nparams <- length(all.params)
nparams <- length(all.params)
nparams
seq(nparams)+10
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
nparams <- length(all.params)
out.df <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][seq(nparams)+8], Error = mod.params.l[[i]][seq(nparams)+10])
out.df$Parameter <- gsub(" ", "", as.character(out.df$Parameter))
params.out[[model.id]] <- out.df
write.table(out.df, paste0(model.id, "_params.txt"), quote = F, sep = "\t", row.names = F)
}
params.out
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
nparams <- length(all.params)
out.df <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][seq(nparams)+8], Error = mod.params.l[[i]][seq(nparams)+(nparams+8)])
out.df$Parameter <- gsub(" ", "", as.character(out.df$Parameter))
params.out[[model.id]] <- out.df
write.table(out.df, paste0(model.id, "_params.txt"), quote = F, sep = "\t", row.names = F)
}
params.out
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
nparams <- length(all.params)
out.df <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][seq(nparams)+8], Error = mod.params.l[[i]][seq(nparams)+(nparams+9)])
out.df$Parameter <- gsub(" ", "", as.character(out.df$Parameter))
params.out[[model.id]] <- out.df
write.table(out.df, paste0(model.id, "_params.txt"), quote = F, sep = "\t", row.names = F)
}
params.out
2.052e+04
1.556e+00
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
nparams <- length(all.params)
out.df <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][seq(nparams)+8], Uncertainty = mod.params.l[[i]][seq(nparams)+(nparams+9)])
out.df$Parameter <- gsub(" ", "", as.character(out.df$Parameter))
params.out[[model.id]] <- out.df
write.table(out.df, paste0(model.id, "_params.txt"), quote = F, sep = "\t", row.names = F)
}
params.out
setwd("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/mcav/moments/PairwisePops/c34/")
weight.cutoff=1e-2 # lowest Akaike weight to report a model
npl=read.table("likes")
names(npl)=c("model","id","npara","ll")
# finding minimum likelihood for each model
maxlike=c()
for (m in unique(npl$model)) {
sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
maxlike$model <- as.character(maxlike$model)
# report parameter estimates for top models
library(stringr)
mod.results <- apply(read.table("mmods.res", sep = ":", as.is = T), 1, function(x) gsub("\\[|\\]|\\[ | \\]", "", x))
mod.params.v <- mod.results[grep(paste(with(maxlike, paste(model, id, sep = " ")), collapse = "|"), mod.results)]
mod.params.v <- gsub("\\s+", " ", str_trim(mod.params.v))
mod.params.l <- sapply(as.list(mod.params.v), function(x) strsplit(x, split = " "))
param.ids <- read.table("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/moments_scripts/folded_params", sep = ":", as.is = T)
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
nparams <- length(all.params)
out.df <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][seq(nparams)+8], Uncertainty = mod.params.l[[i]][seq(nparams)+(nparams+9)])
out.df$Parameter <- gsub(" ", "", as.character(out.df$Parameter))
params.out[[model.id]] <- out.df
write.table(out.df, paste0(model.id, "_params.txt"), quote = F, sep = "\t", row.names = F)
}
params.out
setwd("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/mcav/moments/PairwisePops/c13/")
weight.cutoff=1e-2 # lowest Akaike weight to report a model
npl=read.table("likes")
names(npl)=c("model","id","npara","ll")
#npl$model=as.factor(npl$model)
# finding minimum likelihood for each model
maxlike=c()
for (m in unique(npl$model)) {
sub=subset(npl,model==m)
maxlike=data.frame(rbind(maxlike,sub[sub$ll==max(sub$ll),]))
}
npara=maxlike$npara
likes=maxlike$ll
aic=2*npara-2*likes
delta.aic= aic-min(aic)
delta.aic[delta.aic>100]=100
# weights of evidence
exps=exp(-delta.aic/2)
wts=exps/sum(exps)
wts
maxlike$wts=wts
maxlike=maxlike[order(maxlike$wts,decreasing=T),]
maxlike=subset(maxlike,wts>weight.cutoff)
maxlike$model=factor(maxlike$model,levels=maxlike$model[order(maxlike$wts,decreasing=T)])
plot(wts~model,maxlike,las=2,log="y",xlab="",ylab="evidence weight")
maxlike
maxlike$model <- as.character(maxlike$model)
# report parameter estimates for top models
library(stringr)
mod.results <- apply(read.table("mmods.res", sep = ":", as.is = T), 1, function(x) gsub("\\[|\\]|\\[ | \\]", "", x))
mod.params.v <- mod.results[grep(paste(with(maxlike, paste(model, id, sep = " ")), collapse = "|"), mod.results)]
mod.params.v <- gsub("\\s+", " ", str_trim(mod.params.v))
mod.params.l <- sapply(as.list(mod.params.v), function(x) strsplit(x, split = " "))
param.ids <- read.table("~/Google Drive/Work/~Research/~Projects_Active/AdultJuv_Depth_FL/work/moments_scripts/folded_params", sep = ":", as.is = T)
params.out <- list()
for(i in 1:length(mod.params.l)){
model.id <- mod.params.l[[i]][2]
mod.index <- grep(paste0(mod.params.l[[i]][2],".py"), param.ids[,1], ignore.case = T)
all.params <- unlist(strsplit(param.ids[mod.index,2], split = ","))
nparams <- length(all.params)
out.df <- data.frame(Parameter = all.params, Value = mod.params.l[[i]][seq(nparams)+8], Uncertainty = mod.params.l[[i]][seq(nparams)+(nparams+9)])
out.df$Parameter <- gsub(" ", "", as.character(out.df$Parameter))
params.out[[model.id]] <- out.df
write.table(out.df, paste0(model.id, "_params.txt"), quote = F, sep = "\t", row.names = F)
}
params.out
